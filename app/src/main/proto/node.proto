// compile command:
// python -m grpc_tools.protoc -I=proto/streamingServerBidirectional --python_out=proto/streamingServerBidirectional --grpc_python_out=proto/streamingServerBidirectional proto/streamingServerBidirectional/node.proto --mypy_out=proto/streamingServerBidirectional

syntax = "proto3";
import "google/protobuf/empty.proto";

option java_package ="com.example.mobile_p2pfl.protocol.proto";

package node;

message HandshakeRequest {
    string client_id = 1;
    string version = 2;
}

message HandshakeResponse {
    string server_id = 1;
    string session_id = 2;
}

message Message {
    string source = 1;
    int32 ttl = 2;
    int64 hash = 3;
    string cmd = 4;
    repeated string args = 5;
    optional int32 round = 6;
    bytes payload = 7;
    bool is_last = 8;
}

message DisconnectRequest {
    string session_id = 1;
}

service NodeService {
    rpc Handshake(HandshakeRequest) returns (HandshakeResponse);
    rpc Disconnect(DisconnectRequest) returns (google.protobuf.Empty);
    rpc BidirectionalStream(stream Message) returns (stream Message);
}